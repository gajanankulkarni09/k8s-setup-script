I0908 15:15:43.459464       1 main.go:66] Version: v2.2.0-rc.3-13-g42650bce
I0908 15:15:43.460805       1 main.go:93] Start NewCSISnapshotController with kubeconfig [] resyncPeriod [1m0s]
I0908 15:15:43.461578       1 reflector.go:207] Starting reflector *v1beta1.VolumeSnapshotContent (1m0s) from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.461602       1 reflector.go:243] Listing and watching *v1beta1.VolumeSnapshotContent from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.462277       1 reflector.go:207] Starting reflector *v1beta1.VolumeSnapshotClass (1m0s) from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.462305       1 reflector.go:243] Listing and watching *v1beta1.VolumeSnapshotClass from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.462585       1 reflector.go:207] Starting reflector *v1beta1.VolumeSnapshot (1m0s) from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.462614       1 reflector.go:243] Listing and watching *v1beta1.VolumeSnapshot from github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117
I0908 15:15:43.463491       1 reflector.go:207] Starting reflector *v1.PersistentVolumeClaim (1m0s) from k8s.io/client-go/informers/factory.go:134
I0908 15:15:43.463507       1 reflector.go:243] Listing and watching *v1.PersistentVolumeClaim from k8s.io/client-go/informers/factory.go:134
I0908 15:15:43.463729       1 snapshot_controller_base.go:128] Starting snapshot controller
I0908 15:15:43.563888       1 shared_informer.go:270] caches populated
I0908 15:15:43.563928       1 snapshot_controller_base.go:469] controller initialized
I0908 15:16:43.480948       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:16:43.486350       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:17:43.481159       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:17:43.486845       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:18:43.481315       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:18:43.486970       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:19:43.481467       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:19:43.487094       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:20:43.481648       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:20:43.487234       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:21:43.481833       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:21:43.487396       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:22:40.733111       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:22:40.733172       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:22:40.733182       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:22:40.733189       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.733197       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.733204       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:22:40.733214       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:22:40.733221       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:22:40.733232       1 util.go:230] storeObjectUpdate: adding snapshot "default/ebs-volume-snapshot", version 4326
I0908 15:22:40.733243       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "", Completed: false
I0908 15:22:40.733251       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:22:40.733285       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [(*v1beta1.VolumeSnapshotStatus)(nil)]
I0908 15:22:40.733299       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:22:40.733308       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:22:40.733316       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:22:40.733324       1 snapshot_controller.go:365] checkandAddSnapshotFinalizers: Add Finalizer for VolumeSnapshot[default/ebs-volume-snapshot]
I0908 15:22:40.740165       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4326
I0908 15:22:40.740201       1 snapshot_controller.go:1300] Added protection finalizer to volume snapshot default/ebs-volume-snapshot
I0908 15:22:40.740212       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:22:40.740223       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:22:40.740229       1 snapshot_controller.go:590] createSnapshotContent: Creating content for snapshot default/ebs-volume-snapshot through the plugin ...
I0908 15:22:40.740235       1 snapshot_controller.go:593] createSnapshotContent: Check if PVC is not being deleted and add Finalizer for source of snapshot [ebs-volume-snapshot] if needed
I0908 15:22:40.741371       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:22:40.750786       1 snapshot_controller.go:830] Added protection finalizer to persistent volume claim ebs-claim
I0908 15:22:40.750855       1 snapshot_controller.go:674] getCreateSnapshotInput [ebs-volume-snapshot]
I0908 15:22:40.750863       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.756068       1 snapshot_controller.go:1129] getVolumeFromVolumeSnapshot: snapshot [ebs-volume-snapshot] PV name [pvc-2a5e0655-6b52-4e36-ae18-c39ba5edd3db]
I0908 15:22:40.756124       1 snapshot_controller.go:639] volume snapshot content &v1beta1.VolumeSnapshotContent{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1beta1.VolumeSnapshotContentSpec{VolumeSnapshotRef:v1.ObjectReference{Kind:"VolumeSnapshot", Namespace:"default", Name:"ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", APIVersion:"snapshot.storage.k8s.io/v1beta1", ResourceVersion:"4326", FieldPath:""}, DeletionPolicy:"Delete", Driver:"ebs.csi.aws.com", VolumeSnapshotClassName:(*string)(0xc00051a160), Source:v1beta1.VolumeSnapshotContentSource{VolumeHandle:(*string)(0xc000533390), SnapshotHandle:(*string)(nil)}}, Status:(*v1beta1.VolumeSnapshotContentStatus)(nil)}
I0908 15:22:40.756207       1 snapshot_controller.go:641] createSnapshotContent [default/ebs-volume-snapshot]: trying to save volume snapshot content snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237
I0908 15:22:40.760579       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:22:40.760620       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:40.760633       1 util.go:230] storeObjectUpdate: adding content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", version 4329
I0908 15:22:40.760646       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:22:40.760653       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:22:40.760661       1 snapshot_controller.go:119] syncContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: Add Finalizer for VolumeSnapshotContent
I0908 15:22:40.761175       1 snapshot_controller.go:649] volume snapshot content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for snapshot "default/ebs-volume-snapshot" saved, &{{ } {snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[] map[] [] []  []} {{VolumeSnapshot default ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 snapshot.storage.k8s.io/v1beta1 4326 } Delete ebs.csi.aws.com 0xc00051a160 {0xc000533390 <nil>}} <nil>}
I0908 15:22:40.761296       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4329
I0908 15:22:40.761314       1 snapshot_controller.go:467] syncUnreadySnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:22:40.761322       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:40.761330       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4326 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc000537c40 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc000537c50} Status:<nil>}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:22:40.761916       1 event.go:282] Event(v1.ObjectReference{Kind:"VolumeSnapshot", Namespace:"default", Name:"ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", APIVersion:"snapshot.storage.k8s.io/v1beta1", ResourceVersion:"4326", FieldPath:""}): type: 'Normal' reason: 'CreatingSnapshot' Waiting for a snapshot default/ebs-volume-snapshot to be created by the CSI driver.
I0908 15:22:40.766335       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:22:40.767912       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4329
I0908 15:22:40.767942       1 snapshot_controller.go:774] Added protection finalizer to volume snapshot content snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237
I0908 15:22:40.767965       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:40.767975       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:22:40.767985       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:22:40.767992       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:22:40.768000       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:22:40.768008       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:40.775007       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:22:40.775046       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:22:40.775057       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.775063       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.775070       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:22:40.775079       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:22:40.775111       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:22:40.775150       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4327
I0908 15:22:40.775199       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "", Completed: false
I0908 15:22:40.775208       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:22:40.775236       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [(*v1beta1.VolumeSnapshotStatus)(nil)]
I0908 15:22:40.775247       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:22:40.775295       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:22:40.775305       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:22:40.775313       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:22:40.775322       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:22:40.775333       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:22:40.775343       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:22:40.775391       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:22:40.775402       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:40.775938       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:22:40.778328       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:22:40.778458       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:40.778514       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4332 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001eae40 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001eae50} Status:0xc0001f3da0}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:22:40.781184       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4332
I0908 15:22:40.781221       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4332", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0001f5420), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001f5400)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0001f5460), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001f5440)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0001eb1b0), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0001eb1c0)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc0002382a0)}]
I0908 15:22:40.781319       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4332 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0001eb1b0 <nil>} 0xc0001eb1c0} 0xc0002382a0}
I0908 15:22:40.781411       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:22:40.781423       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:22:40.781431       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.781437       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.781444       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:22:40.781454       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:22:40.781461       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:22:40.781471       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4332
I0908 15:22:40.781482       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:22:40.781490       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:22:40.781498       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eacf0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f0ac9), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:22:40.781517       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:22:40.781529       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:22:40.781537       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:22:40.781544       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:22:40.781552       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:22:40.781561       1 snapshot_controller.go:365] checkandAddSnapshotFinalizers: Add Finalizer for VolumeSnapshot[default/ebs-volume-snapshot]
I0908 15:22:40.785991       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4332
I0908 15:22:40.786027       1 snapshot_controller.go:1300] Added protection finalizer to volume snapshot default/ebs-volume-snapshot
I0908 15:22:40.786036       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:22:40.786046       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:22:40.786058       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:22:40.786064       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:40.787913       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:22:40.789102       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:22:40.789229       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:40.789307       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001ebaf0 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001ebb00} Status:0xc000238ab0}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:22:40.792078       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:22:40.792220       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c3a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c380)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c3e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c3c0)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0001ea0b0), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0001ea0c0)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc0002381e0)}]
I0908 15:22:40.792401       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0001ea0b0 <nil>} 0xc0001ea0c0} 0xc0002381e0}
I0908 15:22:40.792615       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:22:40.792730       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:22:40.792832       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.792872       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:40.792899       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:22:40.792978       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:22:40.793067       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:22:40.793155       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:22:40.793265       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:22:40.793306       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:22:40.793357       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:22:40.793457       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:22:40.793504       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:22:40.793600       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:22:40.793701       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:22:40.793796       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:22:40.793861       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:22:40.793935       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:22:40.793971       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:22:40.794199       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:40.933927       1 request.go:581] Throttling request took 139.576729ms, request: GET:https://192.168.16.1:443/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot
I0908 15:22:40.937033       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:22:40.937181       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:40.937214       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0002a21b0 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0002a21d0} Status:0xc000134390}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:22:41.133924       1 request.go:581] Throttling request took 196.415472ms, request: GET:https://192.168.16.1:443/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot
I0908 15:22:41.137869       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:22:41.137893       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a08c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a08a0)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a0900), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a08e0)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2590), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a25a0)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc000134a50)}]
I0908 15:22:41.138197       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2590 <nil>} 0xc0002a25a0} 0xc000134a50}
I0908 15:22:43.482041       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:22:43.482124       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:22:43.482158       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:22:43.482168       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:22:43.482176       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:43.482182       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:22:43.482190       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:22:43.482199       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:22:43.482207       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:22:43.482218       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:22:43.482232       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:22:43.482241       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:22:43.482277       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:22:43.482308       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:22:43.482320       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:22:43.482327       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:22:43.482335       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:22:43.482343       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:22:43.482355       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:22:43.482380       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:22:43.482393       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:22:43.482402       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:43.485405       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:22:43.485556       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:43.485646       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001ea920 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001ea930} Status:0xc0002386c0}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:22:43.487474       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:22:43.487534       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:22:43.487573       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:22:43.487599       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:22:43.487611       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:22:43.487629       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:22:43.487637       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:22:43.487647       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:22:43.488290       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:22:43.488375       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a10c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a10a0)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a1100), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a10e0)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2de0), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a2df0)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc000135050)}]
I0908 15:22:43.488546       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2de0 <nil>} 0xc0002a2df0} 0xc000135050}
I0908 15:22:54.475185       1 reflector.go:515] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: Watch close - *v1beta1.VolumeSnapshotContent total 3 items received
I0908 15:23:43.482217       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:23:43.482353       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:23:43.482387       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:23:43.482407       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:23:43.482416       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:23:43.482421       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:23:43.482427       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:23:43.482437       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:23:43.482444       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:23:43.482458       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:23:43.482473       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:23:43.482480       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:23:43.482514       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:23:43.482540       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:23:43.482554       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:23:43.482563       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:23:43.482571       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:23:43.482580       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:23:43.482592       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:23:43.482602       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:23:43.482614       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:23:43.482620       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:23:43.486116       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:23:43.486132       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:23:43.486140       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001eaee0 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001eaef0} Status:0xc000239500}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:23:43.487663       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:23:43.487808       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:23:43.487940       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:23:43.488068       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:23:43.488172       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:23:43.488212       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:23:43.488284       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:23:43.488397       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:23:43.489070       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:23:43.489103       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a1bc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a1ba0)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc0002a1c00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002a1be0)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a3a40), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a3a50)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc000135890)}]
I0908 15:23:43.489200       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a3a40 <nil>} 0xc0002a3a50} 0xc000135890}
I0908 15:23:44.470474       1 reflector.go:515] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: Watch close - *v1beta1.VolumeSnapshot total 5 items received
I0908 15:24:02.472911       1 reflector.go:515] k8s.io/client-go/informers/factory.go:134: Watch close - *v1.PersistentVolumeClaim total 7 items received
I0908 15:24:43.482444       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:24:43.482521       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:24:43.482537       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:24:43.482543       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:24:43.482550       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:24:43.482555       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:24:43.482560       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:24:43.482568       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:24:43.482576       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:24:43.482587       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:24:43.482602       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:24:43.482612       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:24:43.482667       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:24:43.482711       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:24:43.482726       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:24:43.482746       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:24:43.482755       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:24:43.482763       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:24:43.482776       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:24:43.482819       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:24:43.482832       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:24:43.482839       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:24:43.486610       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:24:43.486720       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:24:43.486795       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0002a20f0 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0002a2100} Status:0xc000238240}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:24:43.487855       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:24:43.487926       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:24:43.487944       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:24:43.487954       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:24:43.487965       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:24:43.487972       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:24:43.487980       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:24:43.487988       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:24:43.489405       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:24:43.489505       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c780), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c760)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c7c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c7a0)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2470), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a2480)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc000238720)}]
I0908 15:24:43.489743       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2470 <nil>} 0xc0002a2480} 0xc000238720}
I0908 15:25:25.470409       1 reflector.go:515] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: Watch close - *v1beta1.VolumeSnapshotClass total 2 items received
I0908 15:25:43.482704       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:25:43.482779       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:25:43.482819       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:25:43.482830       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:25:43.482843       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:25:43.482849       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:25:43.482856       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:25:43.482866       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:25:43.482874       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:25:43.482886       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:25:43.482902       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:25:43.482909       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:25:43.482943       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:25:43.482974       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:25:43.482988       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:25:43.482997       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:25:43.483006       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:25:43.483014       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:25:43.483026       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:25:43.483036       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:25:43.483047       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:25:43.483054       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:25:43.487312       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:25:43.487485       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:25:43.487517       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001ea2f0 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001ea300} Status:0xc000516960}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:25:43.487947       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:25:43.487990       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:25:43.488008       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:25:43.488020       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:25:43.488032       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:25:43.488041       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:25:43.488048       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:25:43.488056       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:25:43.490862       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:25:43.490902       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034d1e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034d1c0)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034d220), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034d200)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2f70), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a2f80)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc000238f60)}]
I0908 15:25:43.490997       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2f70 <nil>} 0xc0002a2f80} 0xc000238f60}
I0908 15:26:43.482897       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:26:43.482986       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:26:43.483025       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:26:43.483035       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:26:43.483043       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:26:43.483048       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:26:43.483055       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:26:43.483065       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:26:43.483072       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:26:43.483084       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:26:43.483099       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:26:43.483107       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:26:43.483134       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:26:43.483161       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:26:43.483173       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:26:43.483181       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:26:43.483189       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:26:43.483198       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:26:43.483210       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:26:43.483221       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:26:43.483233       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:26:43.483239       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:26:43.487349       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:26:43.487463       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:26:43.487551       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001ea100 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001ea110} Status:0xc0005162d0}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:26:43.488082       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:26:43.488255       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:26:43.488404       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:26:43.488493       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:26:43.488578       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:26:43.488671       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:26:43.488727       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:26:43.488830       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:26:43.491523       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:26:43.491547       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c520)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c580), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c560)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2520), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a2530)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc0002384b0)}]
I0908 15:26:43.491669       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2520 <nil>} 0xc0002a2530} 0xc0002384b0}
I0908 15:27:43.483111       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:27:43.483251       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:27:43.483399       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:27:43.483409       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:27:43.483431       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:27:43.483438       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:27:43.483459       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:27:43.483469       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:27:43.483488       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:27:43.483500       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:27:43.483527       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:27:43.483534       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:27:43.483575       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:27:43.483614       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:27:43.483627       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:27:43.483647       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:27:43.483655       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:27:43.483675       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:27:43.483688       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:27:43.483725       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:27:43.483751       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:27:43.483759       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:27:43.487330       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:27:43.487347       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:27:43.487356       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0002a2e00 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0002a2e10} Status:0xc000238b70}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:27:43.488292       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:27:43.488392       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:27:43.488422       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:27:43.488433       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:27:43.488473       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:27:43.488494       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:27:43.488502       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:27:43.488526       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:27:43.490268       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:27:43.490284       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034d500), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034d4e0)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034d540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034d520)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a31b0), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a31c0)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc0002390e0)}]
I0908 15:27:43.490348       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a31b0 <nil>} 0xc0002a31c0} 0xc0002390e0}
I0908 15:28:43.483356       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:28:43.483473       1 snapshot_controller_base.go:158] enqueued "default/ebs-volume-snapshot" for sync
I0908 15:28:43.483496       1 snapshot_controller_base.go:202] syncSnapshotByKey[default/ebs-volume-snapshot]
I0908 15:28:43.483505       1 snapshot_controller_base.go:205] snapshotWorker: snapshot namespace [default] name [ebs-volume-snapshot]
I0908 15:28:43.483516       1 snapshot_controller_base.go:326] checkAndUpdateSnapshotClass [ebs-volume-snapshot]: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:28:43.483523       1 snapshot_controller.go:1176] getSnapshotClass: VolumeSnapshotClassName [csi-aws-vsc]
I0908 15:28:43.483530       1 snapshot_controller_base.go:346] VolumeSnapshotClass [csi-aws-vsc] Driver [ebs.csi.aws.com]
I0908 15:28:43.483540       1 snapshot_controller_base.go:222] Updating snapshot "default/ebs-volume-snapshot"
I0908 15:28:43.483548       1 snapshot_controller_base.go:356] updateSnapshot "default/ebs-volume-snapshot"
I0908 15:28:43.483559       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:28:43.483574       1 snapshot_controller.go:180] synchronizing VolumeSnapshot[default/ebs-volume-snapshot]: bound to: "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237", Completed: false
I0908 15:28:43.483581       1 snapshot_controller.go:182] syncSnapshot [default/ebs-volume-snapshot]: check if we should remove finalizer on snapshot PVC source and remove it if we can
I0908 15:28:43.483613       1 snapshot_controller.go:901] checkandRemovePVCFinalizer for snapshot [ebs-volume-snapshot]: snapshot status [&v1beta1.VolumeSnapshotStatus{BoundVolumeSnapshotContentName:(*string)(0xc0001eb9b0), CreationTime:(*v1.Time)(nil), ReadyToUse:(*bool)(0xc0001f1599), RestoreSize:(*resource.Quantity)(nil), Error:(*v1beta1.VolumeSnapshotError)(nil)}]
I0908 15:28:43.483639       1 snapshot_controller.go:856] Checking isPVCBeingUsed for snapshot [default/ebs-volume-snapshot]
I0908 15:28:43.483652       1 snapshot_controller.go:876] Keeping PVC default/ebs-claim, it is used by snapshot default/ebs-volume-snapshot
I0908 15:28:43.483660       1 snapshot_controller.go:191] syncSnapshot[default/ebs-volume-snapshot]: check if we should add invalid label on snapshot
I0908 15:28:43.483668       1 snapshot_controller.go:209] syncSnapshot[default/ebs-volume-snapshot]: validate snapshot to make sure source has been correctly specified
I0908 15:28:43.483676       1 snapshot_controller.go:218] syncSnapshot[default/ebs-volume-snapshot]: check if we should add finalizers on snapshot
I0908 15:28:43.483690       1 snapshot_controller.go:399] syncUnreadySnapshot default/ebs-volume-snapshot
I0908 15:28:43.483703       1 snapshot_controller.go:433] getDynamicallyProvisionedContentFromStore for snapshot default/ebs-volume-snapshot
I0908 15:28:43.483716       1 snapshot_controller.go:441] Found VolumeSnapshotContent object snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237 for snapshot default/ebs-volume-snapshot
I0908 15:28:43.483722       1 snapshot_controller.go:955] bindandUpdateVolumeSnapshot for snapshot [ebs-volume-snapshot]: snapshotContent [snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:28:43.487504       1 snapshot_controller.go:965] bindandUpdateVolumeSnapshot [default/ebs-volume-snapshot]: trying to update snapshot status
I0908 15:28:43.487518       1 snapshot_controller.go:1021] updateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:28:43.487524       1 snapshot_controller.go:1042] updateSnapshotStatus: updating VolumeSnapshot [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:ebs-volume-snapshot GenerateName: Namespace:default SelfLink:/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot UID:863f0cfc-926e-4168-90fd-eddf5ae51237 ResourceVersion:4333 Generation:1 CreationTimestamp:2020-09-08 15:22:40 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[] Annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] OwnerReferences:[] Finalizers:[snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection] ClusterName: ManagedFields:[{Manager:kubectl Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {Manager:snapshot-controller Operation:Update APIVersion:snapshot.storage.k8s.io/v1beta1 Time:2020-09-08 15:22:40 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} Spec:{Source:{PersistentVolumeClaimName:0xc0001ea100 VolumeSnapshotContentName:<nil>} VolumeSnapshotClassName:0xc0001ea110} Status:0xc0005162d0}] based on VolumeSnapshotContentStatus [<nil>]
I0908 15:28:43.488411       1 reflector.go:369] github.com/kubernetes-csi/external-snapshotter/client/v2/informers/externalversions/factory.go:117: forcing resync
I0908 15:28:43.488473       1 snapshot_controller_base.go:175] enqueued "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" for sync
I0908 15:28:43.488519       1 snapshot_controller_base.go:277] syncContentByKey[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]
I0908 15:28:43.488535       1 util.go:258] storeObjectUpdate updating content "snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237" with version 4330
I0908 15:28:43.488548       1 snapshot_controller.go:86] synchronizing VolumeSnapshotContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: content is bound to snapshot default/ebs-volume-snapshot
I0908 15:28:43.488554       1 snapshot_controller.go:88] syncContent[snapcontent-863f0cfc-926e-4168-90fd-eddf5ae51237]: check if we should add invalid label on content
I0908 15:28:43.488562       1 snapshot_controller.go:1368] getSnapshotFromStore: snapshot default/ebs-volume-snapshot found
I0908 15:28:43.488569       1 snapshot_controller.go:989] needsUpdateSnapshotStatus[default/ebs-volume-snapshot]
I0908 15:28:43.490123       1 util.go:258] storeObjectUpdate updating snapshot "default/ebs-volume-snapshot" with version 4333
I0908 15:28:43.490143       1 snapshot_controller.go:982] bindandUpdateVolumeSnapshot for snapshot completed [&v1beta1.VolumeSnapshot{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ebs-volume-snapshot", GenerateName:"", Namespace:"default", SelfLink:"/apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot", UID:"863f0cfc-926e-4168-90fd-eddf5ae51237", ResourceVersion:"4333", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63735175360, loc:(*time.Location)(0x203af20)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"snapshot.storage.k8s.io/v1beta1\",\"kind\":\"VolumeSnapshot\",\"metadata\":{\"annotations\":{},\"name\":\"ebs-volume-snapshot\",\"namespace\":\"default\"},\"spec\":{\"source\":{\"persistentVolumeClaimName\":\"ebs-claim\"},\"volumeSnapshotClassName\":\"csi-aws-vsc\"}}\n"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection", "snapshot.storage.kubernetes.io/volumesnapshot-bound-protection"}, ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"kubectl", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c520), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c500)}, v1.ManagedFieldsEntry{Manager:"snapshot-controller", Operation:"Update", APIVersion:"snapshot.storage.k8s.io/v1beta1", Time:(*v1.Time)(0xc00034c560), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00034c540)}}}, Spec:v1beta1.VolumeSnapshotSpec{Source:v1beta1.VolumeSnapshotSource{PersistentVolumeClaimName:(*string)(0xc0002a2520), VolumeSnapshotContentName:(*string)(nil)}, VolumeSnapshotClassName:(*string)(0xc0002a2530)}, Status:(*v1beta1.VolumeSnapshotStatus)(0xc0002384b0)}]
I0908 15:28:43.490227       1 snapshot_controller.go:451] bindandUpdateVolumeSnapshot &{{ } {ebs-volume-snapshot  default /apis/snapshot.storage.k8s.io/v1beta1/namespaces/default/volumesnapshots/ebs-volume-snapshot 863f0cfc-926e-4168-90fd-eddf5ae51237 4333 1 2020-09-08 15:22:40 +0000 UTC <nil> <nil> map[] map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"snapshot.storage.k8s.io/v1beta1","kind":"VolumeSnapshot","metadata":{"annotations":{},"name":"ebs-volume-snapshot","namespace":"default"},"spec":{"source":{"persistentVolumeClaimName":"ebs-claim"},"volumeSnapshotClassName":"csi-aws-vsc"}}
] [] [snapshot.storage.kubernetes.io/volumesnapshot-as-source-protection snapshot.storage.kubernetes.io/volumesnapshot-bound-protection]  [{kubectl Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:source":{".":{},"f:persistentVolumeClaimName":{}},"f:volumeSnapshotClassName":{}}}} {snapshot-controller Update snapshot.storage.k8s.io/v1beta1 2020-09-08 15:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:finalizers":{}},"f:status":{".":{},"f:boundVolumeSnapshotContentName":{},"f:readyToUse":{}}}}]} {{0xc0002a2520 <nil>} 0xc0002a2530} 0xc0002384b0}
